name: ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1

      # Install dependencies for the backend
      - name: Install journal-backend dependencies
        uses: actions/setup-node@v3
        with:
          node-version: "20.x" # Updated as per recommendation
          cache: "npm"
          cache-dependency-path: journal-backend/package-lock.json
      - run: cd journal-backend && npm install

      # Install dependencies for the frontend
      - name: Install journal-frontend dependencies
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: journal-frontend/package-lock.json
      - run: cd journal-frontend && npm install

      # Linting and testing steps for backend and/or frontend
      # - name: Lint journal-frontend
      #   run: cd journal-frontend && npm run lint
      - name: Test journal-frontend
        run: cd journal-frontend && npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push a docker image
        uses: docker/build-push-action@v5
        with:
          context: ./journal-backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:latest

  build-frontend:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push a docker image
        uses: docker/build-push-action@v5
        with:
          context: ./journal-frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox-front:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: webfactory/ssh-agen
        uses: webfactory/ssh-agent@v.0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Lets add our production server to the list of known servers
        run: ssh-keyscan -H ${{ secrets.PRODUCTION_SERVER_HOSTNAME }} >> ~/.ssh/known_hosts
      - name: Actually triggering deployment
        run: ssh -tt ${{ secrets.PRODUCTION_SERVER_USERNAME }}@${{ secrets.PRODUCTION_SERVER_HOSTNAME }}
